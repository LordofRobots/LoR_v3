name: ci

on:
  push:
  pull_request:

jobs:
  lint-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Arduino Lint
        uses: arduino/arduino-lint-action@v1
        with:
          compliance: permissive
          project-type: library

      - name: Set up Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      # Clean any stale state so old/bad URLs don't linger
      - name: Reset Arduino CLI state
        run: |
          rm -rf /home/runner/.arduino15
          mkdir -p /home/runner/.arduino15

      - name: Configure Arduino CLI (cores + sketchbook)
        run: |
          set -e
          arduino-cli config init
          arduino-cli config set directories.user /home/runner/Arduino
          # Add boards indexes WITHOUT commas in the strings
          arduino-cli config set board_manager.additional_urls https://espressif.github.io/arduino-esp32/package_esp32_index.json
          arduino-cli config add board_manager.additional_urls https://raw.githubusercontent.com/ricardoquesada/esp32-arduino-lib-builder/master/bluepad32_files/package_esp32_bluepad32_index.json

          echo "=== arduino-cli config ==="
          arduino-cli config dump

          arduino-cli core update-index
          # Primary toolchain: Bluepad32 board core
          arduino-cli core install esp32_bluepad32:esp32
          # Optional: Espressif core for a secondary build
          arduino-cli core install esp32:esp32
          arduino-cli core list

      - name: Install Libraries
        run: |
          set -e
          arduino-cli lib update-index
          arduino-cli lib install "FastLED"
          arduino-cli lib install "ESP32Servo@3.0.7"
          arduino-cli lib list

      - name: Install THIS library into sketchbook
        run: |
          set -e
          rm -rf /home/runner/Arduino/libraries/LoR_Core_V3
          mkdir -p /home/runner/Arduino/libraries/LoR_Core_V3
          cp -R ./* /home/runner/Arduino/libraries/LoR_Core_V3/

      - name: List Bluepad32 boards (debug)
        run: |
          arduino-cli board listall | grep -i bluepad32 -A2 -B2 || true

      - name: Compile examples (Bluepad32 core)
        run: |
          set -e
          CANDS=("esp32_bluepad32:esp32:esp32" \
                 "esp32_bluepad32:esp32:esp32dev" \
                 "esp32_bluepad32:esp32:esp32doit-devkit-v1")
          for ex in $(find examples -name '*.ino'); do
            echo "==> Building $ex with Bluepad32 core"
            ok=0
            for fqbn in "${CANDS[@]}"; do
              echo "Trying FQBN: $fqbn"
              if arduino-cli compile --fqbn "$fqbn" "$ex"; then
                echo "✅ $ex built with $fqbn"
                ok=1
                break
              else
                echo "…failed for $fqbn"
              fi
            done
            if [ $ok -ne 1 ]; then
              echo "❌ Failed to compile $ex with any Bluepad32 FQBN"
              exit 1
            fi
          done

      - name: Compile examples (Espressif core)  # optional, best-effort
        continue-on-error: true
        run: |
          set -e
          for ex in $(find examples -name '*.ino'); do
            echo "==> Building $ex for esp32:esp32:esp32"
            arduino-cli compile --fqbn esp32:esp32:esp32 "$ex" || true
          done
